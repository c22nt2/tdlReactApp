{"version":3,"sources":["logo.svg","components/ClassComponent.js","components/FuncComponent.js","components/ClassChild.js","components/Sample.js","components/ClassParent.js","components/AddToDo.js","components/ToDoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","Demo1","props","Title","Demo2","Child","this","Sample","state","a","handleButtonClick","console","log","setState","type","onClick","AddTodo","Id","Status","handleIdChange","event","target","value","handleTitleChange","handleStatusChange","handleToDoSubmit","preventDefault","onAdd","onSubmit","className","onChange","placeholder","TodoList","todos","edit_ToDo","x","map","todo","delete_ToDo","filteredItems","filter","add_ToDo","key","style","color","icon","library","add","faTrash","faEdit","faPlus","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e9673ed7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, {Component} from \"react\";\r\n\r\nclass Demo extends Component {\r\n  render() {\r\n     return (\r\n         <div>\r\n             <h1>Testing</h1>\r\n         </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default Demo;","import React, {Component} from \"react\";\r\n\r\nfunction Demo1(props) {\r\n  return (\r\n      <div>\r\n         <h1>Hello From function Component</h1>\r\n         <h2>{props.Title}</h2>\r\n      </div>\r\n  );\r\n}\r\n\r\nconst Demo2 = (props) => {\r\n  return (\r\n     <div>\r\n        <h1>Hello From function Component</h1>\r\n        <h2>{props.Title}</h2>\r\n     </div>\r\n  );\r\n}\r\n\r\nconst Demo3 = (props) => (\r\n  <div>\r\n     <h1>Hello From function Component</h1>\r\n     <h2>{props.Title}</h2>\r\n  </div>\r\n)\r\n\r\n// export default Demo1;\r\n// export default Demo2;\r\nexport {\r\n   Demo1, \r\n   Demo2,\r\n   Demo3\r\n}","import React, { Component } from 'react';\r\nexport default class Child extends Component {\r\nrender() {\r\n    return (\r\n      <div>\r\n          <h3>I am Child Component</h3>\r\n          <h3>{this.props.Title}</h3>\r\n      </div>\r\n    );\r\n }\r\n}","import React, {Component} from \"react\";\r\n\r\nexport default class Sample extends Component {\r\n  state = {\r\n      a: 'Hello'\r\n  };\r\n  handleButtonClick = () => {\r\n     console.log(\"Inside Button Click\");\r\n     this.setState({\r\n      a: \"you clicked Button\"\r\n    });\r\n  };\r\n  render() {\r\n     return (\r\n        <div>\r\n           <h1>{this.state.a}</h1>\r\n           <button type=\"button\" onClick={this.handleButtonClick} >Click Me</button>\r\n        </div>\r\n    );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport Child from './ClassChild';\r\nimport * as DM from './FuncComponent';\r\nexport default class Parent extends Component {\r\nrender() {\r\n    return (\r\n      <div>\r\n          <h1>I am parent Component</h1>\r\n          <Child Title=\"I am text from Parent Component\"></Child>\r\n          <DM.Demo1 Title=\"I am Text for function Component\" ></DM.Demo1>\r\n          <DM.Demo2 Title=\"I am Text for function Component\" ></DM.Demo2>\r\n          <DM.Demo2 Title=\"I am Text for function Component\" ></DM.Demo2>\r\n      </div>\r\n    );\r\n }\r\n}","import React, { Component } from \"react\";\r\nexport default class AddTodo extends Component {\r\n    state = {\r\n        Id: \"\",\r\n        Title: \"\",\r\n        Status: \"Pending\"\r\n    };\r\n    handleIdChange = (event) => {\r\n        this.setState({\r\n            Id: event.target.value\r\n        });\r\n    };\r\n    handleTitleChange = (event) => {\r\n        this.setState({\r\n            Title: event.target.value\r\n        });\r\n    }\r\n    handleStatusChange = (event) => {\r\n        this.setState({\r\n            Status: event.target.value\r\n        });\r\n    };\r\n    handleToDoSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAdd({\r\n            Id: this.state.Id,\r\n            Title: this.state.Title,\r\n            Status: this.state.Status\r\n        });\r\n        this.setState({\r\n            Id: \"\",\r\n            Title: \"\",\r\n            Status: \"Pending\"\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>\r\n                    Add ToDo\r\n                </h3>\r\n                <form onSubmit={this.handleToDoSubmit} >\r\n                    <div className=\"form-group\" >\r\n                        <input value={this.state.Id} onChange={this.handleIdChange} className=\"form-control\" placeholder=\"Enter Id\" />\r\n                    </div>\r\n                    <div className=\"form-group\" >\r\n                        <input value={this.state.Title} onChange={this.handleTitleChange} className=\"form-control\" placeholder=\"Enter Title\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select value={this.state.Status} onChange={this.handleStatusChange} className=\"form-control\" >\r\n                            <option value=\"Done\" >Done</option>\r\n                            <option value=\"Pending\" >Pending</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"form-control btn btn-primary\" >Add Todo</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AddTodo from './AddToDo';\r\n\r\nexport default class TodoList extends Component {\r\n\r\n  state = {\r\n     todos: [\r\n       { Id: '1', Title: 'Push your code to github', Status: 'Done' },\r\n       { Id: '2', Title: 'Email to your manager', Status: 'Pending' }\r\n     ]\r\n  };\r\n  edit_ToDo = (x) => {\r\n      console.log(x);\r\n      this.setState(state => ({\r\n          todos: state.todos.map(todo => {\r\n            if (todo.Id === x.Id) {\r\n                return {\r\n                      ...todo,\r\n                      Status: todo.Status === \"Done\" ? \"Pending\" : \"Done\"\r\n                };\r\n            } else {\r\n                return todo;\r\n            }\r\n        })\r\n    }));\r\n  };\r\n  delete_ToDo = (todo) => {\r\n      const filteredItems = this.state.todos.filter(x => x.Id !== todo.Id);\r\n      this.setState({\r\n          todos: filteredItems\r\n      });\r\n  };\r\n  add_ToDo = (todo) => {\r\n      this.setState({\r\n          todos: [...this.state.todos, todo]\r\n      });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n         <div>\r\n             <AddTodo onAdd={this.add_ToDo}></AddTodo>\r\n             <h1>TodoList </h1>\r\n                <table className=\"table\">\r\n                   <thead>\r\n                     <tr>\r\n                        <th>Id</th>\r\n                        <th>Title</th>\r\n                        <th>Status</th>\r\n                        <th>Action</th>\r\n                     </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                       {this.state.todos.map(x => {\r\n                         return (\r\n                              <tr key={x.Id}>\r\n                              <td>{x.Id}</td>\r\n                              <td>{x.Title}</td>\r\n                              <td style={{ color: x.Status === \"Done\" ? \"green\" : \"red\" }}>{x.Status}</td>\r\n                              <td>\r\n                                <button className=\"btn btn-primary\" onClick={() => this.delete_ToDo(x)}>\r\n                                  <span>\r\n                                    <FontAwesomeIcon icon=\"trash\" color=\"#acacac\"></FontAwesomeIcon>\r\n                                  </span>\r\n                                </button>\r\n                                <button className=\"btn btn-primary\" onClick={() => this.edit_ToDo(x)}>\r\n                                  <span>\r\n                                    <FontAwesomeIcon icon=\"edit\"></FontAwesomeIcon>\r\n                                  </span>\r\n                                </button>\r\n                              </td>\r\n                              </tr>\r\n                          );\r\n                       })}\r\n                    </tbody>\r\n                </table>\r\n          </div> \r\n      );\r\n   }\r\n  \r\n\r\n  }","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Demo from './components/ClassComponent';\r\nimport * as DM from './components/FuncComponent';\r\nimport Parent from './components/ClassParent';\r\nimport Sample from './components/Sample';\r\nimport ToDoList from './components/ToDoList';\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faTrash, faPlus, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faTrash, faEdit, faPlus);\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>App Components</h1>\r\n      <Sample></Sample>\r\n      <ToDoList></ToDoList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}